name: update-snapshots
on:
  # will send emails to last editor of this cron syntax (distroless-bot)
  schedule:
    - cron:  '30 20 * * *'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v5
      with:
        go-version: '1.20'

    - name: Checkout to branch
      run: |
        # Check for update-snapshot existance
        if [ `git rev-parse --verify update-snapshots` ]; then
          echo "Reseting existing branch"
          git checkout update-snapshots
          git reset --hard origin/main
        else
          echo "Creating new branch"
          git checkout -b update-snapshots
        fi

    - name: Run update script
      run: echo "Test updated again" >> README.md
    #   run: ./updateWorkspaceSnapshots.sh

    # - name: Run update sboms script
    #   run: |
    #     for i in $(seq 5); do
    #       bazel --bazelrc=$GITHUB_WORKSPACE/.github/workflows/ci.bazelrc fetch //private/pkg/test/oci_image:test_sboms && break || sleep 20;
    #     done
    #     bazel run @//private/pkg/test/oci_image:test_sboms

    - name: Create commits
      run: |
        # Check work tree and end successfully if empty
        if [ -z "$(git status --porcelain)" ]; then
          echo "Nothing to commit";
          exit 0;
        fi

        # Set identity.
        git config --global user.email "distroless-bot@google.com"
        git config --global user.name "Distroless Bot"

        # Commit changes
        git add .
        git commit -s -m "Bumping packages to latest stable versions"
        git push --force origin HEAD

    - name: Create Pull Request
      env:
        GH_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
      run: |
        # Check diff and end successfully if empty
        if [ -z "$(git diff origin/main)" ]; then
          echo "No diff to create PR";
          exit 0;
        fi

        # Create PR
        if ! OUTPUT=$(gh pr create -B main -H update-snapshots -t "Bumping packages to latest stable versions" -b "Bumping packages to latest stable versions" 2>&1) ; then
          echo $OUTPUT
          if [[ "${OUTPUT}" =~ "already exists" ]]; then
            echo "PR already exists and it was updated. Ending successfully";
            exit 0;
          else
            exit 1;
          fi
        fi
